[user]
	name = Dillon Welch
	email = daw0328@gmail.com
	signingkey = 4CAB42A969203697
[pull]
	rebase = true
[color "status"]
	updated = green
	untracked = yellow
	changed = yellow
[color "diff"]
	old = yellow
[mergetool]
	keepBackup = false
[merge]
	tool = vimdiff
[push]
	default = upstream
[fetch]
	prune = true
[help]
	autocorrect = 1
[core]
	editor = /usr/local/bin/vim
[alias]
  # Amends all staged changes to last commit.
  ac = commit -a --amend --no-edit

  # Alias for branch.
  b = branch

  # Alias for checkout.
  co = checkout

  # Prints the short text of the current branch name.
  currentbranch = symbolic-ref HEAD --short

  # Createas a new branch from the current branch (after updating it).
  cb = !git pull && git cbb $@
  cbb = !sh -c 'git checkout -b ${1}'

  # Creates a new branch from master.
  cbm = !git checkout master && git cb ${1}

  # Lists changed files from the last commit.
  cf = !sh -c 'git diff-tree --no-commit-id --name-only -r $(git log -1 --format="%H")'

  # Deletes a branch, switching to master first (can't get conditional switching to work).
  db = !sh -c 'git checkout master && git branch -D ${0}'

  # Deletes the current branch.
  dbc = !git db $(git currentbranch)

  # Prints a list of deleted files in the repo
  dfiles = !git log --diff-filter=D --summary | grep delete

  # Pushes the branch and forces any changes/conflicts
  gud = !sh -c 'git push --force'

  # Pushes current branch to heroku.
  heroku = !git push heroku $(git currentbranch):master

  # Prints the last commit
  lc = log -1

  # Diff of the last commit
  lcdiff = diff HEAD~1

  # Hash of the last commit
  lchash = log -1 --format="%H"

  # Undo the last commit, leaving the changes staged.
  lcreset = reset --soft HEAD^

  # Merges in latest master
  mm = !git fetch && git merge origin/master

  # Removes all untracked files and uncommitted changes
  # Unstages all changes
  # Deletes untracked files and directories
  # Discards all changes to tracked files
  nuke = !git reset HEAD . && git clean -f -d  && git checkout -- .

  # Pushes a branch to origin and sets the upstream.
  po = !sh -c 'git push -u origin $(git currentbranch)'

  # Renames the current branch
  rb = !sh -c 'git branch -m "${0}"'

  # Resets the branch to the remote version of the passed in branch name.
  rh = !sh -c 'git reset --hard origin/${0}'

  # Alias for status.
  s = status

  # Sets the remote upstream branch to the current branch.
  sr = !sh -c 'git branch --set-upstream-to="origin/${0}"'

  # Searches remote branches for a string.
  search = !sh -c 'git grep "${0}" $(git ls-remote . 'refs/remotes/*' | cut -f 2)'
[credential]
	helper = osxkeychain
[commit]
	gpgsign = true
[gpg]
	program = gpg
